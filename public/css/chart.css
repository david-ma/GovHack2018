/*
 * David Ma - March 2018
 */
#big-chart {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  height: 100%;
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  background: white;
  z-index: 1000; }
  #big-chart svg {
    height: 100%;
    width: 100%; }

.chart {
  font-family: Roboto, "Helvetica Neue", Helvetica, Arial, sans-serif;
  /* Axes */ }
  .chart .chart-title {
    text-anchor: middle;
    font-size: 24px; }
  .chart .line {
    fill: none;
    stroke: steelblue;
    stroke-width: 2px; }
  .chart path {
    stroke: none; }
  .chart .y.axis text {
    font-size: 14px; }
  .chart .x.axis text {
    font-size: 12px;
    fill: #333333; }
  .chart .x.axis line {
    stroke-width: 1;
    stroke: #D3D3D3;
    shape-rendering: crispEdges; }
  .chart:hover .chart-nav {
    background: -webkit-gradient(linear, left top, left bottom, from(rgba(255, 255, 255, 0)), to(rgba(0, 0, 0, 0.3)));
    background: linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(0, 0, 0, 0.3)); }
    .chart:hover .chart-nav .expander {
      display: block; }
  .chart .chart-nav {
    position: absolute;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 50px; }
    .chart .chart-nav .expander {
      cursor: pointer;
      height: 100%;
      position: absolute;
      right: 0;
      bottom: 0;
      background: white;
      padding: 5px;
      border: solid 1px black;
      border-radius: 5px;
      height: 30px;
      width: 30px;
      text-align: center;
      margin: 10px;
      display: none; }
      .chart .chart-nav .expander:hover {
        border: solid 2px black; }
  .chart .vennDiagram .activeShape {
    cursor: pointer; }
    .chart .vennDiagram .activeShape text {
      fill: black; }
  .chart .vennDiagram .left {
    fill: #ffcccc; }
    .chart .vennDiagram .left.selected {
      fill: #e60000; }
    .chart .vennDiagram .left:hover {
      fill: #ff8080; }
  .chart .vennDiagram .mid {
    fill: #d194d1; }
    .chart .vennDiagram .mid.selected {
      fill: #592659; }
    .chart .vennDiagram .mid:hover {
      fill: #ba5eba; }
  .chart .vennDiagram .right {
    fill: #ccddff; }
    .chart .vennDiagram .right.selected {
      fill: #004de6; }
    .chart .vennDiagram .right:hover {
      fill: #80aaff; }

.dataviz-page section {
  padding-bottom: 40px;
  border-bottom: 1px solid lightgrey;
  margin-bottom: 20px; }
  .dataviz-page section.hidden {
    display: none; }

.dataviz-page #dataset .largeTable {
  overflow: scroll;
  border: 1px solid grey;
  border-radius: 3px;
  margin-top: 10px;
  padding: 10px; }
  .dataviz-page #dataset .largeTable .dataTables_wrapper {
    width: 100vw; }
  .dataviz-page #dataset .largeTable .dataTables_info, .dataviz-page #dataset .largeTable .dataTables_length, .dataviz-page #dataset .largeTable .download_csv_link {
    position: -webkit-sticky;
    position: sticky;
    left: 10px; }
  .dataviz-page #dataset .largeTable .dataTables_paginate {
    position: -webkit-sticky;
    position: sticky;
    right: 0; }
  .dataviz-page #dataset .largeTable .dataTables_filter {
    position: -webkit-sticky;
    position: sticky;
    right: 10px; }

.dataviz-page #dataset table tbody {
  line-height: 1em;
  font-size: 12px;
  font-family: "Source Code Pro", Monaco, Menlo, Consolas, "Courier New", monospace; }
  .dataviz-page #dataset table tbody tr:hover {
    background: #ddd; }
  .dataviz-page #dataset table tbody td {
    padding: 2px 3px;
    border: 1px solid #eee;
    white-space: nowrap; }

.dataviz-page img {
  width: 100%;
  border: 1px solid grey; }

.dataviz-page h1 {
  font-size: 30px; }

.dataviz-page h2 {
  font-size: 20px; }

.dataviz-page h1 + h2, .dataviz-page h2 + h2 {
  margin-top: 0; }

.dataviz-page blockquote p {
  margin: 1px;
  font-size: 0.8em; }

.dataviz-page .world-map path.country {
  fill: lightgrey;
  stroke: darkgrey; }

.dataviz-page .world-map .graticule {
  fill: none;
  stroke: #777;
  stroke-width: .5px;
  stroke-opacity: .5; }

.dataviz-page .world-map .boundary {
  fill: none;
  stroke: #000;
  stroke-width: 3px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
